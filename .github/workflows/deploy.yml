  deploy:
    needs: approval
    runs-on: windows-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app
          path: ./app
      
      - name: Deploy to AWS Windows Server
        shell: powershell
        run: |
          $ErrorActionPreference = "Stop"
          Write-Host "üöÄ Starting deployment to AWS Windows Server"
          
          # Prepare credentials
          $pw = ConvertTo-SecureString "${{ secrets.AWS_PASSWORD }}" -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential ("${{ secrets.AWS_USER }}", $pw)
          
          # Skip certificate validation in session options
          $so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck
          
          try {
            # Pre-check: ensure WinRM HTTPS/Basic works
            Write-Host "üîé Testing WinRM connection..."
            Test-WSMan -ComputerName "${{ secrets.AWS_HOST }}" -UseSSL -Port 5986 -Authentication Basic -Credential $cred
            
            # Create remote PowerShell session with Basic Authentication
            Write-Host "üì° Connecting to ${{ secrets.AWS_HOST }}..."
            $session = New-PSSession -ComputerName "${{ secrets.AWS_HOST }}" `
                                     -Credential $cred `
                                     -Authentication Basic `
                                     -UseSSL `
                                     -Port 5986 `
                                     -SessionOption $so
            
            if (-not $session) {
              Write-Error "‚ùå Failed to create remote session. Session is null."
              exit 1
            }
            
            Write-Host "‚úÖ Remote session established."
            
            # Ensure destination directory exists
            Write-Host "üìÅ Ensuring destination directory exists..."
            Invoke-Command -Session $session -ScriptBlock {
              if (-not (Test-Path "C:\inetpub\wwwroot\myapp")) {
                New-Item -Path "C:\inetpub\wwwroot\myapp" -ItemType Directory -Force | Out-Null
              }
            }
            
            # Copy files
            Write-Host "üìÅ Copying files to remote server..."
            Copy-Item -Path ./app/* -Destination "C:\inetpub\wwwroot\myapp" `
                      -Recurse -Force -ToSession $session
            
            Write-Host "‚úÖ Files copied successfully."
            
            # Restart IIS
            Write-Host "üîÅ Restarting IIS..."
            Invoke-Command -Session $session -ScriptBlock { 
              iisreset 
              Write-Host "IIS restarted successfully."
            }
            
            # End session
            Remove-PSSession -Session $session
            Write-Host "‚úÖ Deployment complete! üéâ"
            
          } catch {
            Write-Error "‚ùå Deployment failed: $_"
            Write-Error "Error details: $($_.Exception.Message)"
            if ($session) { 
              Remove-PSSession -Session $session -ErrorAction SilentlyContinue
            }
            exit 1
          }
